"use strict";(self.webpackChunkweb_components_repo=self.webpackChunkweb_components_repo||[]).push([[447],{"./packages/message/dist/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./packages/message/dist/message.cjs.production.min.js")},"./packages/message/dist/message.cjs.production.min.js":(__unused_webpack_module,exports)=>{var n=function(n){!function(){if(!document.querySelector("#qmsg-message-css")){var n=document.createElement("style");n.id="qmsg-message-css",n.innerHTML='\n    .qmsg.qmsg-wrapper{\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    color: rgba(0, 0, 0, .55);\n    font-size: 13px;\n    font-variant: tabular-nums;\n    line-height: 1;\n    list-style: none;\n    font-feature-settings: "tnum";\n    position: fixed;\n    top: 16px;\n    left: 0;\n    z-index: 1010;\n    width: 100%;\n    pointer-events: none;\n}\n.qmsg .qmsg-item{\n    padding: 8px;\n    text-align: center;\n    -webkit-animation-duration: .3s;\n    animation-duration: .3s;\n    position: relative;\n}\n.qmsg .qmsg-item .qmsg-count{\n    position: absolute;\n    left: -4px;\n    top: -4px;\n    background-color: red;\n    color: #fff;\n    font-size: 12px;\n    line-height: 16px;\n    border-radius: 2px;\n    display: inline-block;\n    min-width: 16px;\n    height: 16px;\n    -webkit-animation-duration: .3s;\n    animation-duration: .3s;\n}\n.qmsg .qmsg-item:first-child{\n    margin-top: -8px;\n}\n.qmsg .qmsg-content{\n    position: relative;\n    display: inline-block;\n    padding: 10px 16px;\n    background: #fff;\n    border-radius: 4px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, .15);\n    pointer-events: all;\n    /* min-width: 175px; */\n}\n.qmsg .qmsg-content .qmsg-content-with-close{\n    padding-right: 20px;\n}\n.qmsg .qmsg-icon{\n    display: inline-block;\n    color: inherit;\n    font-style: normal;\n    line-height: 0;\n    text-align: center;\n    text-transform: none;\n    vertical-align: -.125em;\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    position: relative;\n    top: 1px;\n    margin-right: 8px;\n    font-size: 16px;\n}\n.qmsg .qmsg-icon svg{\n    display: inline-block;\n}\n\n.qmsg .qmsg-content-info .qmsg-icon{\n    color: #1890ff;\n    user-select: none;\n}\n.qmsg .qmsg-icon-close{\n    position: absolute;\n    top: 11px;\n    right: 5px;\n    padding: 0;\n    overflow: hidden;\n    font-size: 12px;\n    line-height: 22px;\n    background-color: transparent;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    color: rgba(0, 0, 0, .45);\n    transition: color .3s\n}\n.qmsg .qmsg-icon-close:hover>svg path{\n    stroke: #555;\n}\n.qmsg .animate-turn{\n    animation:MessageTurn 1s linear infinite;  \n    -webkit-animation: MessageTurn 1s linear infinite;\n}\n@keyframes MessageTurn{\n    0%{-webkit-transform:rotate(0deg);}\n    25%{-webkit-transform:rotate(90deg);}\n    50%{-webkit-transform:rotate(180deg);}\n    75%{-webkit-transform:rotate(270deg);}\n    100%{-webkit-transform:rotate(360deg);}\n}\n@-webkit-keyframes MessageTurn{\n    0%{-webkit-transform:rotate(0deg);}\n    25%{-webkit-transform:rotate(90deg);}\n    50%{-webkit-transform:rotate(180deg);}\n    75%{-webkit-transform:rotate(270deg);}\n    100%{-webkit-transform:rotate(360deg);}\n}\n\n@-webkit-keyframes MessageMoveOut {\n    0% {\n        max-height: 150px;\n        padding: 8px;\n        opacity: 1\n    }\n\n    to {\n        max-height: 0;\n        padding: 0;\n        opacity: 0\n    }\n}\n\n@keyframes MessageMoveOut {\n    0% {\n        max-height: 150px;\n        padding: 8px;\n        opacity: 1\n    }\n\n    to {\n        max-height: 0;\n        padding: 0;\n        opacity: 0\n    }\n}\n\n\n@-webkit-keyframes MessageMoveIn {\n    \n    0% {\n        transform: translateY(-100%);\n        transform-origin: 0 0;\n        opacity: 0\n    }\n\n    to {\n        transform: translateY(0);\n        transform-origin: 0 0;\n        opacity: 1\n    }\n}\n\n@keyframes MessageMoveIn {\n    0% {\n        transform: translateY(-100%);\n        transform-origin: 0 0;\n        opacity: 0\n    }\n\n    to {\n        transform: translateY(0);\n        transform-origin: 0 0;\n        opacity: 1\n    }\n}\n@-webkit-keyframes MessageShake {\n    0%,\n    100% {\n      transform: translateX(0px);\n      opacity: 1;\n    }\n  \n    25%,\n    75% {\n        transform: translateX(-4px);\n      opacity: 0.75;\n    }\n  \n    50% {\n        transform: translateX(4px);\n        opacity: 0.25;\n    }\n  }\n@keyframes MessageShake {\n    0%,\n    100% {\n      transform: translateX(0px);\n      opacity: 1;\n    }\n  \n    25%,\n    75% {\n        transform: translateX(-4px);\n      opacity: 0.75;\n    }\n  \n    50% {\n        transform: translateX(4px);\n        opacity: 0.25;\n    }\n  }   \n',document.head.appendChild(n)}}();var t,e=n&&n.QMSG_GLOBALS&&n.QMSG_GLOBALS.NAMESPACE||"qmsg",i={opening:"MessageMoveIn",done:"",closing:"MessageMoveOut"},o=Object.assign({type:"info",showClose:!1,timeout:3500,animation:!0,autoClose:!0,content:"",onClose:null,maxNums:5,html:!1},n&&n.QMSG_GLOBALS&&n.QMSG_GLOBALS.DEFAULTS),s={info:'<svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="48" height="48" fill="white" fill-opacity="0.01"/><path d="M24 44C29.5228 44 34.5228 41.7614 38.1421 38.1421C41.7614 34.5228 44 29.5228 44 24C44 18.4772 41.7614 13.4772 38.1421 9.85786C34.5228 6.23858 29.5228 4 24 4C18.4772 4 13.4772 6.23858 9.85786 9.85786C6.23858 13.4772 4 18.4772 4 24C4 29.5228 6.23858 34.5228 9.85786 38.1421C13.4772 41.7614 18.4772 44 24 44Z" fill="#1890ff" stroke="#1890ff" stroke-width="4" stroke-linejoin="round"/><path fill-rule="evenodd" clip-rule="evenodd" d="M24 11C25.3807 11 26.5 12.1193 26.5 13.5C26.5 14.8807 25.3807 16 24 16C22.6193 16 21.5 14.8807 21.5 13.5C21.5 12.1193 22.6193 11 24 11Z" fill="#FFF"/><path d="M24.5 34V20H23.5H22.5" stroke="#FFF" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M21 34H28" stroke="#FFF" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>',warning:'<svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="48" height="48" fill="white" fill-opacity="0.01"/><path d="M24 44C29.5228 44 34.5228 41.7614 38.1421 38.1421C41.7614 34.5228 44 29.5228 44 24C44 18.4772 41.7614 13.4772 38.1421 9.85786C34.5228 6.23858 29.5228 4 24 4C18.4772 4 13.4772 6.23858 9.85786 9.85786C6.23858 13.4772 4 18.4772 4 24C4 29.5228 6.23858 34.5228 9.85786 38.1421C13.4772 41.7614 18.4772 44 24 44Z" fill="#faad14" stroke="#faad14" stroke-width="4" stroke-linejoin="round"/><path fill-rule="evenodd" clip-rule="evenodd" d="M24 37C25.3807 37 26.5 35.8807 26.5 34.5C26.5 33.1193 25.3807 32 24 32C22.6193 32 21.5 33.1193 21.5 34.5C21.5 35.8807 22.6193 37 24 37Z" fill="#FFF"/><path d="M24 12V28" stroke="#FFF" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>',error:'<svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="48" height="48" fill="white" fill-opacity="0.01"/><path d="M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z" fill="#f5222d" stroke="#f5222d" stroke-width="4" stroke-linejoin="round"/><path d="M29.6569 18.3431L18.3432 29.6568" stroke="#FFF" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M18.3432 18.3431L29.6569 29.6568" stroke="#FFF" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>',success:'<svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="48" height="48" fill="white" fill-opacity="0.01"/><path d="M24 4L29.2533 7.83204L35.7557 7.81966L37.7533 14.0077L43.0211 17.8197L41 24L43.0211 30.1803L37.7533 33.9923L35.7557 40.1803L29.2533 40.168L24 44L18.7467 40.168L12.2443 40.1803L10.2467 33.9923L4.97887 30.1803L7 24L4.97887 17.8197L10.2467 14.0077L12.2443 7.81966L18.7467 7.83204L24 4Z" fill="#52c41a" stroke="#52c41a" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M17 24L22 29L32 19" stroke="#FFF" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>',loading:'<svg class="animate-turn" width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="48" height="48" fill="white" fill-opacity="0.01"/><path d="M4 24C4 35.0457 12.9543 44 24 44V44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4" stroke="#1890ff" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M36 24C36 17.3726 30.6274 12 24 12C17.3726 12 12 17.3726 12 24C12 30.6274 17.3726 36 24 36V36" stroke="#1890ff" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>',close:'<svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="48" height="48" fill="white" fill-opacity="0.01"/><path d="M14 14L34 34" stroke="#909399" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M14 34L34 14" stroke="#909399" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>'},r=void 0!==(t=document.createElement("div").style).animationName||void 0!==t.WebkitAnimationName||void 0!==t.MozAnimationName||void 0!==t.msAnimationName||void 0!==t.OAnimationName;function a(){for(var n=e,t=0;t<arguments.length;++t)n+="-"+(t<0||arguments.length<=t?void 0:arguments[t]);return n}function l(n){var t=this;t.settings=Object.assign({},o,n||{}),t.id=g.instanceCount;var r=t.settings.timeout;r=r&&parseInt(r)>=0&parseInt(r)<=Math.NEGATIVE_INFINITY?parseInt(r):o.timeout,t.timeout=r,t.settings.timeout=r,t.timer=null;var l=document.createElement("div"),d=s[t.settings.type||"info"],m=a("content-"+t.settings.type||0);m+=t.settings.showClose?" "+a("content-with-close"):"";var h=t.settings.content||"",p=t.settings.showClose?'<i class="qmsg-icon qmsg-icon-close">'+s.close+"</i>":"",u=document.createElement("span");t.settings.html?u.innerHTML=t.settings.html:u.innerText=h,l.innerHTML='<div class="qmsg-content">            <div class="'+m+'">                <i class="qmsg-icon">'+d+"</i>"+u.outerHTML+p+"</div>    </div>",l.classList.add(a("item"));var f=document.querySelector("."+e);f||((f=document.createElement("div")).classList.add(e,a("wrapper"),a("is-initialized")),document.body.appendChild(f)),f.appendChild(l),t.$wrapper=f,t.$elem=l,c(t,"opening"),t.settings.showClose&&l.querySelector(".qmsg-icon-close").addEventListener("click",function(){t.close()}.bind(l)),l.addEventListener("animationend",function(n){var t=n.target;n.animationName==i.closing&&(clearInterval(this.timer),this.destroy()),t.style.animationName="",t.style.webkitAnimationName=""}.bind(t)),t.settings.autoClose&&(t.timer=setInterval(function(){this.timeout-=10,this.timeout<=0&&(clearInterval(this.timer),this.close())}.bind(t),10),t.$elem.addEventListener("mouseover",function(){clearInterval(this.timer)}.bind(t)),t.$elem.addEventListener("mouseout",function(){"closing"!=this.state&&(this.timer=setInterval(function(){this.timeout-=10,this.timeout<=0&&(clearInterval(this.timer),this.close())}.bind(t),10))}.bind(t)))}function c(n,t){t&&i[t]&&(n.state=t,n.$elem.style.animationName=i[t])}function d(n,t){var e=Object.assign({},o);return 0===arguments.length?e:n instanceof Object?Object.assign(e,n):(e.content=n.toString(),t instanceof Object?Object.assign(e,t):e)}function m(n){n=n||{};var t,e=JSON.stringify(n),i=-1;for(var s in this.oMsgs){var r=this.oMsgs[s];if(r.config==e){i=s,t=r.inst;break}}if(i<0){this.instanceCount++;var c={};c.id=this.instanceCount,c.config=e,(t=new l(n)).id=this.instanceCount,t.count="",c.inst=t,this.oMsgs[this.instanceCount]=c;var d=this.oMsgs.length,m=this.maxNums;if(d>m)for(var g=0,h=this.oMsgs;g<d-m;g++)h[g]&&h[g].inst.settings.autoClose&&h[g].inst.close()}else t.count=t.count?t.count+1:2,function(n){var t=a("count"),e=n.$elem.querySelector("."+a("content")),i=e.querySelector("."+t);i||((i=document.createElement("span")).classList.add(t),e.appendChild(i)),i.innerHTML=n.count,i.style.animationName="",i.style.animationName="MessageShake",n.timeout=n.settings.timeout||o.timeout}(t);return t.$elem.setAttribute("data-count",t.count),t}l.prototype.destroy=function(){this.$elem.parentNode&&this.$elem.parentNode.removeChild(this.$elem),clearInterval(this.timer),g.remove(this.id)},l.prototype.close=function(){c(this,"closing"),r?g.remove(this.id):this.destroy();var n=this.settings.onClose;n&&n instanceof Function&&n.call(this)};var g={version:"0.0.1",instanceCount:0,oMsgs:[],maxNums:o.maxNums||5,config:function(n){o=n&&n instanceof Object?Object.assign(o,n):o,this.maxNums=o.maxNums&&o.maxNums>0?parseInt(o.maxNums):3},info:function(n,t){var e=d(n,t);return e.type="info",m.call(this,e)},warning:function(n,t){var e=d(n,t);return e.type="warning",m.call(this,e)},success:function(n,t){var e=d(n,t);return e.type="success",m.call(this,e)},error:function(n,t){var e=d(n,t);return e.type="error",m.call(this,e)},loading:function(n,t){var e=d(n,t);return e.type="loading",e.autoClose=!1,m.call(this,e)},remove:function(n){this.oMsgs[n]&&delete this.oMsgs[n]},closeAll:function(){for(var n in this.oMsgs)this.oMsgs[n]&&this.oMsgs[n].inst.close()}};return g};exports.initMessage=n,exports.initMsg=n},"./packages/multi-player/dist/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./packages/multi-player/dist/multi-player.cjs.production.min.js")},"./packages/multi-player/dist/multi-player.cjs.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var e,t=__webpack_require__("./packages/message/dist/index.js"),n=__webpack_require__("./node_modules/.pnpm/@gaopeng123+utils.string@1.1.11/node_modules/@gaopeng123/utils.string/dist/utils.string.esm.js"),r=(e=__webpack_require__("./node_modules/.pnpm/mpegts.js@1.7.0/node_modules/mpegts.js/dist/mpegts.js"))&&"object"==typeof e&&"default"in e?e.default:e,o=__webpack_require__("./node_modules/.pnpm/@gaopeng123+utils.function@1.1.11/node_modules/@gaopeng123/utils.function/dist/utils.function.esm.js");function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,"symbol"==typeof(o=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key))?o:String(o),r)}var o}function a(e){return(a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function s(e,t){return(s=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function u(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function l(e,t,n){return(l=u()?Reflect.construct.bind():function(e,t,n){var r=[null];r.push.apply(r,t);var o=new(Function.bind.apply(e,r));return n&&s(o,n.prototype),o}).apply(null,arguments)}function c(e){var t="function"==typeof Map?new Map:void 0;return(c=function(e){if(null===e||-1===Function.toString.call(e).indexOf("[native code]"))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return l(e,arguments,a(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),s(n,e)})(e)}function f(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function E(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function d(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return E(e,void 0);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?E(e,void 0):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0;return function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var p={NETWORK_ERROR:r.ErrorTypes.NETWORK_ERROR,MEDIA_ERROR:r.ErrorTypes.NETWORK_ERROR,OTHER_ERROR:r.ErrorTypes.NETWORK_ERROR},_={ERROR:r.Events.ERROR,LOADING_COMPLETE:r.Events.LOADING_COMPLETE,RECOVERED_EARLY_EOF:r.Events.RECOVERED_EARLY_EOF,MEDIA_INFO:r.Events.MEDIA_INFO,METADATA_ARRIVED:r.Events.METADATA_ARRIVED,SCRIPTDATA_ARRIVED:r.Events.SCRIPTDATA_ARRIVED,TIMED_ID3_METADATA_ARRIVED:r.Events.TIMED_ID3_METADATA_ARRIVED,PES_PRIVATE_DATA_DESCRIPTOR:r.Events.PES_PRIVATE_DATA_DESCRIPTOR,PES_PRIVATE_DATA_ARRIVED:r.Events.PES_PRIVATE_DATA_ARRIVED,STATISTICS_INFO:r.Events.STATISTICS_INFO,LOADING_COMPLETE_ING:"loading_complete_ing",LOAD_START:"load_start"},y=[r.Events.ERROR,r.Events.LOADING_COMPLETE,r.Events.RECOVERED_EARLY_EOF,r.Events.MEDIA_INFO,r.Events.METADATA_ARRIVED,r.Events.SCRIPTDATA_ARRIVED,r.Events.TIMED_ID3_METADATA_ARRIVED,r.Events.PES_PRIVATE_DATA_DESCRIPTOR,r.Events.PES_PRIVATE_DATA_ARRIVED,r.Events.STATISTICS_INFO],v=[r.ErrorTypes.NETWORK_ERROR,r.ErrorTypes.MEDIA_ERROR,r.ErrorTypes.OTHER_ERROR],R=function(){function e(e,t,n){var o=this;this.addEvent=function(){for(var e,t=d(y);!(e=t()).done;){var n=e.value;o.player.on(n,o.onEvents.bind(o,n))}},this.addError=function(){for(var e,t=d(v);!(e=t()).done;){var n=e.value;o.player.on(n,o.onErrors.bind(o,n))}},this.onEvents=function(e,t){e===r.Events.ERROR?o.onErrors(e,t):(o.__onEvent&&o.__onEvent(e,t),o["on"+e]&&o["on"+e](err,t))},this.onErrors=function(e,t){o.__onError&&o.__onError(e,t),o["on"+e]&&o["on"+e](err,t)},this.onLOADING_COMPLETE=function(e,t){},this.onRECOVERED_EARLY_EOF=function(){},this.onMEDIA_INFO=function(){},this.onMETADATA_ARRIVED=function(){},this.onSCRIPTDATA_ARRIVED=function(){},this.onTIMED_ID3_METADATA_ARRIVED=function(){},this.onSCTE35_METADATA_ARRIVED=function(){},this.onPES_PRIVATE_DATA_ARRIVED=function(){},this.onSTATISTICS_INFO=function(){},this.player=e,this.__onEvent=t,this.__onError=n,this.init()}var t=e.prototype;return t.init=function(){this.addEvent()},t.destroy=function(){for(var e,t=d(y);!(e=t()).done;)this.player.off(e.value,this.onEvents)},e}(),T={bufferTime:1e3,loopBufferTime:5e3,maxResetTimes:5,isOpen:!0},h={type:"flv",cors:!0,withCredentials:!1,hasAudio:!1,hasVideo:!0},A=function(e){var a,u;function l(){var n;return(n=e.call(this)||this).shadow=null,n.q_msg=null,n.obj_props=["media-data-source","config","robustness"],n.__defaultConfig={"object-fit":"fill",width:"100%",height:"100%","media-data-source":h,config:{stashInitialSize:10,enableWorker:!0,liveBufferLatencyChasing:!0,autoCleanupSourceBuffer:!0,lazyLoadMaxDuration:300},robustness:T},n.player=null,n.playerEvent=null,n.handleAttributeChanged=o.debounce((function(){n.createPlayer()}),10),n.createPlayer=function(){return n.destroyPlayer(),r.isSupported()?n.mediaDataSource.url?(n.player=r.createPlayer(n.mediaDataSource,n.config),n.player.attachMediaElement(n.shadow.querySelector("#multi-player")),n.player.load(),n.player.play().then((function(){console.log(n.mediaDataSource.url+" start playing"),n.loopAdjustBuffer(),n.__resetTimes=0,n.onEvent(_.LOAD_START,"load_start"),n.addLoadingEvent(null)})),void n.onPlayEvent()):new Error("url 不能为空"):new Error("mpegts 没有准备好")},n.onVisibilityChange=function(){"visible"===document.visibilityState&&n.adjustBuffer()},n.__resetTimes=0,n.restart=function(){n.__resetTimes<=n.robustness.maxResetTimes&&(n.clearAdjustBuffer(),n.destroyPlayer(),n.handleAttributeChanged(),n.__resetTimes++)},n.play=function(){return n.player.play()},n.pause=function(){n.player.pause()},n.setCurrentTime=function(e){n.player.currentTime=e},n.clearAdjustBuffer=function(){var e;clearTimeout(n.__adjustBuffer),n.__lastCurrentTime=0,null==(e=n.playerEvent)||e.destroy()},n.__adjustBuffer=null,n.__lastCurrentTime=0,n.loopAdjustBuffer=function(){n.robustness.isOpen&&(n.__adjustBuffer=setTimeout((function(){n.adjustBuffer()}),n.robustness.loopBufferTime))},n.onPlayEvent=function(){n.playerEvent=new R(n.player,n.onEvent.bind(f(n)),n.onError.bind(f(n)))},n._speedIntervalKey=null,n._loadingIntervalKey=null,n._loopCheckEnd=function(){var e=0;clearInterval(n._speedIntervalKey),n._speedIntervalKey=setInterval((function(){try{if(n.player){var t=n.player.currentTime,r=n.player.statisticsInfo.speed,o=n.player.buffered.end(0);console.log("paused: "+n.video.paused+" speed: "+r+" currentTime: "+t+", end: "+o),o-t<.5?e+=1:e=0,e>=2&&(clearInterval(n._speedIntervalKey),n.onEvent(_.LOADING_COMPLETE_ING,o-t+"almost complete loading"))}else clearInterval(n._speedIntervalKey)}catch(e){console.log(e),clearInterval(n._speedIntervalKey)}}),1e3)},n.addLoadingEvent=function(e){clearInterval(n._speedIntervalKey),clearInterval(n._loadingIntervalKey),setTimeout((function(){e?e===_.LOADING_COMPLETE&&(clearInterval(n._speedIntervalKey),n._loopCheckEnd()):n._loopCheckEnd()}),n.robustness.loopBufferTime)},n.onEvent=function(e,t){n.dispatchEvent(new CustomEvent(e,{detail:{event:e,info:t}}))},n.onError=function(e,t,r){var o;e===p.NETWORK_ERROR&&(n.restart(),null==(o=n.q_msg)||o.warning(e+": 网络连接失败，请稍后重试")),console.error(new Date,e,t,r),n.dispatchEvent(new CustomEvent(e,{detail:{error:t,info:r,resetTimes:n.__resetTimes,maxResetTimes:n.robustness.maxResetTimes}}))},n.onPlayLog=function(){},n.destroyPlayer=function(){var e;clearInterval(n._loadingIntervalKey),clearInterval(n._speedIntervalKey),n.player&&(null==(e=n.playerEvent)||e.destroy(),n.player.pause(),n.player.unload(),n.player.detachMediaElement(),n.player.destroy(),n.player=null)},n.getFeatureList=function(){return r.getFeatureList()},n.shadow=n.attachShadow({mode:"closed"}),n.q_msg=t.initMsg(f(n)),n.q_msg.config({showClose:!0}),n}u=e,(a=l).prototype=Object.create(u.prototype),a.prototype.constructor=a,s(a,u);var c,E,d,y=l.prototype;return y.initMediaDataSource=function(){this.__defaultConfig["media-data-source"]=h},y.connectedCallback=function(){var e,t;this.shadow.innerHTML=(t=(e=this.defaultConfig).height,"\n\t\t\t<style>\n                .multi-player {\n                   width: "+n.addBoxSizeUnit(e.width)+";\n                   height: "+n.addBoxSizeUnit(t)+";\n                   object-fit: "+e["object-fit"]+'\n                }\n\t\t\t</style>\n\t\t\t<video id="multi-player" class="multi-player" muted="muted" autoplay="autoplay">\n\t\t\t'),this.handleAttributeChanged(),document.addEventListener("visibilitychange",this.onVisibilityChange)},y.disconnectedCallback=function(){document.removeEventListener("visibilitychange",this.onVisibilityChange),this.destroyPlayer()},y.attributeChangedCallback=function(e,t,n){t!==n&&("media-data-source"===e&&this.initMediaDataSource(),this.__defaultConfig[e]=this.obj_props.includes(e)?Object.assign({},this.__defaultConfig[e],JSON.parse(n)):n),this.handleAttributeChanged()},y.adjustBuffer=function(){var e,t,n=this.robustness.bufferTime/1e3;if(null!=(e=this.player)&&null!=(t=e.buffered)&&t.length){var r=this.player.currentTime,o=this.player.buffered.end(0);n&&o-r>=n&&(this.player.currentTime=this.player.buffered.end(0)-.05),this.__lastCurrentTime=this.player.currentTime}},c=l,d=[{key:"observedAttributes",get:function(){return["width","height","media-data-source","config","robustness","object-fit"]}}],(E=[{key:"defaultConfig",get:function(){return this.__defaultConfig}},{key:"config",get:function(){return this.defaultConfig.config}},{key:"mediaDataSource",get:function(){return this.defaultConfig["media-data-source"]}},{key:"robustness",get:function(){return this.defaultConfig.robustness}},{key:"video",get:function(){return this.shadow.querySelector("#multi-player")}},{key:"objectFit",set:function(e){this.video&&(this.video.style["object-fit"]=e)}}])&&i(c.prototype,E),d&&i(c,d),Object.defineProperty(c,"prototype",{writable:!1}),l}(c(HTMLElement));customElements.get("multi-player")||customElements.define("multi-player",A),exports.DEFAULT_ROBUSTNESS=T,exports.MultiPlayerEvent=_},"./packages/rc-multi-player/src/Player/RcFlvPlayer.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@17.0.2/node_modules/react/index.js"),_gaopeng123_multi_player__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/multi-player/dist/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(((props,ref)=>{const{width,height,mediaDataSource,config,robustness,objectFit,style,events,extraParams}=props,media_data_source=JSON.stringify(mediaDataSource||{}),[id]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(`multi-player-${Date.now()}`),getVideo=()=>document.querySelector(`#${id}`);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const video=getVideo(),eventsInfo={mediaDataSource,extraParams,objectFit,config,robustness},_onLoad=(ev,info)=>{events?.onLoadStart&&events?.onLoadStart(eventsInfo)},_onError=(ev,info)=>{console.log("flv play _onError"),events?.onReload&&events?.onReload(eventsInfo)},_onLoading=()=>{console.log("flv play _onLoading"),events?.onReload&&events?.onReload(eventsInfo)};return video&&(video.addEventListener(_gaopeng123_multi_player__WEBPACK_IMPORTED_MODULE_1__.MultiPlayerEvent.LOAD_START,_onLoad),video.addEventListener(_gaopeng123_multi_player__WEBPACK_IMPORTED_MODULE_1__.MultiPlayerEvent.ERROR,_onError),video.addEventListener(_gaopeng123_multi_player__WEBPACK_IMPORTED_MODULE_1__.MultiPlayerEvent.LOADING_COMPLETE_ING,_onLoading)),()=>{video.removeEventListener(_gaopeng123_multi_player__WEBPACK_IMPORTED_MODULE_1__.MultiPlayerEvent.LOAD_START,_onLoad),video.removeEventListener(_gaopeng123_multi_player__WEBPACK_IMPORTED_MODULE_1__.MultiPlayerEvent.ERROR,_onError),video.removeEventListener(_gaopeng123_multi_player__WEBPACK_IMPORTED_MODULE_1__.MultiPlayerEvent.LOADING_COMPLETE_ING,_onLoading)}}),[]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref,(()=>({close:()=>{const video=getVideo();video&&video?.destroyPlayer()},reload:()=>{const video=getVideo();video&&video?.createPlayer()},getVideo:()=>{const video=document.querySelector(`#${id}`)?.video;return video}}))),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("multi-player",{style:Object.assign({width:"100%",height:"100%"},style),id,"object-fit":objectFit,width,height,"media-data-source":media_data_source,config:JSON.stringify(config||{}),robustness:JSON.stringify(robustness||{})})}))},"./packages/rc-multi-player/README.md?raw":module=>{module.exports="# 播放器组件\n\n## 基础属性\n\n| 属性            | 说明                                                         | 类型                                                         | 默认值 |\n| --------------- | ------------------------------------------------------------ | ------------------------------------------------------------ | ------ |\n| objectFit       | 视频填充                                                     | 'fill' \\| 'contain ' \\| 'cover' \\| 'scale-down' \\| 'none ' \\| 'initial ' \\| 'inherit' | fill   |\n| mediaDataSource | [视频属性](https://github.com/xqq/mpegts.js/blob/master/docs/api.md#mediadatasource) |                                                              |        |\n| robustness      | 容错配置                                                     | {     <br />//  播放过程中缓冲器最小矫正的时间 默认为1000ms   <br />bufferTime: DOMHighResTimeStamp;    <br />// 多场时间探测一次 默认5000ms<br />   loopBufferTime: DOMHighResTimeStamp; <br />  // 最大断线重连次数 默认为 5 次 <br />  maxResetTimes: number;        <br />}; |        |\n| extraParams     | 额外的参数配置                                               | {}                                                           | any    |\n| events          | 事件订阅                                                     | {     <br />// 视频播放开始     <br />onLoadStart?: (playerConfig?: PlayerConfig) => void;     <br />// 点击视频重新加载    <br /> onReload?: (playerConfig?: PlayerConfig) => void;     <br />// 加载错误     <br />onLoadError?: (playerConfig?: PlayerConfig) => void;     <br />// 流加载结束    <br /> onLoadEnd?: (playerConfig?: PlayerConfig)=> void;     <br />// 最大重试次数    <br /> onMaxReload?: (playerConfig?: PlayerConfig) => void;    <br /> // 视频结束     <br />onClose?: (playerConfig?: PlayerConfig) => void; <br />}<br />// 回放视频变更事件     <br />onTimeChange?: (playerConfig?: PlayerConfig) => void; <br />} |        |\n| width           | 视频宽度                                                     | string ｜number                                              | 100%   |\n| height          | 视频高度                                                     | string ｜number                                              | 100%   |\n\n## RcFlvPlayer\n\n> flv播放器，依赖@gaopeng123/multi-player\n\n### Usage\n\n```tsx\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {RcMultiPlayer} from \"../src\";\nimport {useEffect, useState} from \"react\";\n\nconst App = () => {\n    const [mediaDataSource, setMediaDataSource] = useState<any>({});\n\n    useEffect(() => {\n        setTimeout(() => {\n            setMediaDataSource({url: 'https://xxx/flv/xxx'})\n        }, 2000);\n    }, [])\n    return (\n        <RcMultiPlayer\n            mediaDataSource={mediaDataSource}\n        />\n    );\n};\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n```\n\n## RcWebRTCPlayer\n\n`WebRTC 播放器`\n\n### Usage\n\n```tsx\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {RcWebRTCPlayer} from \"../src\";\nimport {useEffect, useState} from \"react\";\n\nconst App = () => {\n    const [mediaDataSource, setMediaDataSource] = useState<any>({});\n\n    useEffect(() => {\n        setTimeout(() => {\n            setMediaDataSource({url: 'https://xxx/flv/xxx'})\n        }, 2000);\n    }, [])\n    return (\n        <RcWebRTCPlayer\n            mediaDataSource={mediaDataSource}\n        />\n    );\n};\n\nReactDOM.render(<App/>, document.getElementById('root'));\n```\n\n## RcMultiPlayer\n\n`混合播放器，双协议`\n\n| 属性          | 说明                         | 类型                          | 默认值  |\n| ------------- | ---------------------------- | ----------------------------- | ------- |\n| protocol      | 协议类型                     | 'FLV' \\| 'WebRTC'             | FLV     |\n| title         | 视频左上角展示内容           | string \\| ReactNode           | null    |\n| className     | 样式                         |                               |         |\n| maxPlayerTime | 最大播放时长，超出后自动关闭 | \"3min\" \\| '5min' \\| 'forever' | forever |\n\n### Usage\n\n```tsx\nimport React from 'react';\nimport MultiPlayer from \"./MultiPlayer\";\nimport styles from '../styles.module.less';\nimport { LayoutPlayerProps, PlayerConfig, } from \"./PlayerTyping\";\nimport { MultiStoreEnum } from \"../MultiTyping\";\n\nconst LayoutPlayer: React.FC<LayoutPlayerProps> = (props) => {\n    const { layoutIndex, playerConfig, selected, mediaDataSource, dispatch, events, state } = props;\n    const onClose = () => {\n        dispatch({\n            index: layoutIndex,\n            value: null\n        })\n    }\n\n    const playerEvents = Object.assign({}, events, {\n        onClose: (playerConfig: PlayerConfig) => {\n            onClose();\n            if (events?.onClose) {\n                events?.onClose(Object.assign({}, playerConfig, { layoutIndex }));\n            }\n        },\n        onReload: (playerConfig: PlayerConfig) => {\n            if (events?.onReload) {\n                events?.onReload(Object.assign({}, playerConfig, { layoutIndex }));\n            }\n        },\n        onMaxReload: (playerConfig: PlayerConfig) => {\n            if (events?.onMaxReload) {\n                events?.onMaxReload(Object.assign({}, playerConfig, { layoutIndex }));\n            }\n        }\n    });\n\n    const screenConfig = state[MultiStoreEnum.screenConfig];\n\n    const { maxPlayerTime } = screenConfig;\n\n    return (\n        <MultiPlayer\n            maxPlayerTime={maxPlayerTime}\n            events={playerEvents}\n            mediaDataSource={mediaDataSource}\n            protocol={playerConfig?.protocol}\n            extraParams={playerConfig?.extraParams}\n            title={playerConfig?.title}\n            className={selected ? styles.selected : styles.player}\n        />\n    )\n};\n\nexport default LayoutPlayer;\n```\n\n## RcMultiScreenPlayer\n\n`多屏播放器`\n\n| 属性                  | 说明                             | 类型                                                         | 默认值                                                       |\n| --------------------- | -------------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| className             | 样式                             |                                                              |                                                              |\n| defaultSelectedScreen | 默认分配数量                     | 1 \\| 4 \\| 6 \\| 8 \\| 9 \\| 12 \\| 13 \\| 16;                     | 4                                                            |\n| defaultPlayerConfig   | 视频播放基础属性                 | {     <br />// 协议类型     <br />protocol?: Protocol \\| false \\| {         <br />defaultValue: Protocol,        <br /> options: Array<PlayerConfigOptions>    <br /> },     <br />// 视频拉伸方式     <br />objectFit?: ObjectFit \\| false \\| {       <br />  defaultValue: ObjectFit,         <br />options: Array<PlayerConfigOptions>    <br /> };     <br />// 是否播放时长     <br />maxPlayerTime?: MaxPlayerTime \\| false \\| {         <br />defaultValue: MaxPlayerTime,        <br /> options: Array<PlayerConfigOptions>     <br />},     <br />// 视频分辨率    <br /> resolution?: Resolution \\| false \\| {         <br />defaultValue: Resolution,         <br />options: Array<PlayerConfigOptions>   <br />  } <br />} | {<br />protocol: 'FLV',<br /><br />maxPlayerTime: 'forever'<br /><br />objectFit: 'fill'<br /><br />resolution: '720P'<br />} |\n| currentConfig         | player基础属性+RcMultiPlayer属性 |                                                              |                                                              |\n| id                    | 标识                             | string                                                       | multi-screen-player                                          |\n| events                | 事件订阅                         | 基础属性events                                               |                                                              |\n\n### Usage\n\n```tsx\nimport * as React from 'react';\nimport { Button, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { RcMultiScreenPlayer } from \"../src\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { useRef } from \"react\";\n\ntype RcMultiScreenPlayerTestProps = {};\nconst RcMultiScreenPlayerTest: React.FC<RcMultiScreenPlayerTestProps> = (props) => {\n    const [protocol, setProtocol] = React.useState<any>('FLV');\n    const [open, setOpen] = React.useState(false);\n    const [currentConfig, setCurrentConfig] = React.useState<any>();\n    const screenRef = useRef(null);\n    const handleChange = (v: any) => {\n        setProtocol(v?.target?.value);\n    }\n    const onClick = (e: any) => {\n        // @ts-ignore\n        const url = document.querySelector('#outlined-basic')?.value;\n        // @ts-ignore\n        const title = document.querySelector('#outlined-title')?.value;\n        if (url) {\n            setCurrentConfig({\n                mediaDataSource: { url: url, type: 'flv', },\n                playerConfig: { protocol: protocol, title: title, extraParams: { test: 1 }, layoutIndex: '0' }\n            });\n        } else {\n            setOpen(true)\n        }\n    }\n    return (\n        <div style={{ height: 600 }}>\n            <div style={{ display: 'flex' }}>\n                <div style={{ flex: 1 }}>\n                    <div style={{ width: '90%' }} className={'form'}>\n                        <FormControl fullWidth className={'form-item'}>\n                            <InputLabel id=\"demo-simple-select-label\">协议类型</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={protocol}\n                                label=\"Age\"\n                                onChange={handleChange}\n                            >\n                                <MenuItem value={'FLV'}>FLV</MenuItem>\n                                <MenuItem value={'WebRTC'}>WebRTC</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <FormControl fullWidth className={'form-item'}>\n                            <TextField defaultValue={'title'} id=\"outlined-title\" label=\"视频title\"\n                                       variant=\"outlined\"/>\n                        </FormControl>\n                        <FormControl fullWidth className={'form-item'}>\n                            <TextField defaultValue={'/live/40491879758-1-30002.flv'} id=\"outlined-basic\" label=\"url地址\"\n                                       variant=\"outlined\"/>\n                        </FormControl>\n                        <FormControl fullWidth className={'form-item'}>\n                            <Button onClick={onClick} type={'submit'} id=\"form-submit\"\n                                    variant=\"outlined\">\n                                提交\n                            </Button>\n                        </FormControl>\n                    </div>\n                </div>\n                <div style={{ flex: 3, height: 600 }}>\n                    <RcMultiScreenPlayer\n                        events={{\n                            onReload: (e) => {\n                                onClick(e);\n                            },\n                            onClose: (e) => {\n                                console.log(222, e);\n                            }\n                        }}\n                        defaultPlayerConfig={{\n                            protocol: false,\n                            maxPlayerTime: {\n                                defaultValue: '3min',\n                                options: [{\n                                    label: '3分钟',\n                                    value: '3min'\n                                }]\n                            },\n                            objectFit: 'cover'\n                        }}\n                        ref={screenRef}\n                        currentConfig={currentConfig}\n                        defaultSelectedScreen={4}/>\n                </div>\n            </div>\n            <Snackbar\n                anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                open={open}\n                autoHideDuration={6000}\n                onClose={() => setOpen(false)}\n                message=\"请输入播放地址\"\n            />\n        </div>\n    )\n};\n\nexport default RcMultiScreenPlayerTest;\n```\n\n"}}]);